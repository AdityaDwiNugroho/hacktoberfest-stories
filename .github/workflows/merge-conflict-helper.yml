name: Merge Conflict Helper

on:
  pull_request:
    types: [opened, synchronize]
    paths:
      - "public/data/stories.json"

jobs:
  check-conflicts:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read

    steps:
      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Check for merge conflicts
        id: conflict_check
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }}

          if git merge-tree $(git merge-base HEAD origin/${{ github.event.pull_request.base.ref }}) HEAD origin/${{ github.event.pull_request.base.ref }} | grep -q "<<<<<<< "; then
            echo "has_conflict=true" >> $GITHUB_OUTPUT
            echo "Merge conflict detected in stories.json"
          else
            echo "has_conflict=false" >> $GITHUB_OUTPUT
            echo "No merge conflicts detected"
          fi

      - name: Comment on PR about conflict
        if: steps.conflict_check.outputs.has_conflict == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `## Merge Conflict Detected

            It looks like there might be a merge conflict in \`stories.json\`.

            Common causes:
            - Duplicate story IDs
            - Conflicting additions at the same position

            ### How to resolve:

            1. Pull the latest changes from main:
               \`\`\`bash
               git fetch origin main
               git merge origin/main
               \`\`\`

            2. If you have conflicts in \`stories.json\`:
               - Check for duplicate IDs - make sure your story has a unique ID
               - Keep both stories, just ensure they have different IDs
               - Make sure the JSON structure is valid (commas, brackets, etc.)

            3. After fixing:
               \`\`\`bash
               git add public/data/stories.json
               git commit -m "Resolve merge conflict"
               git push
               \`\`\`

            The auto-format workflow will clean up the formatting after merge.`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
